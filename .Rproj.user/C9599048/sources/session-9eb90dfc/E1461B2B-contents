library(tidyverse)
library(ggtext)
library(latex2exp)


###
u <- seq(0.001, 2, length.out = 1000)

f1 <- u * log(u)^2
f2 <- u * (u - 1)^2
f3 <- u * abs(u - 1)
f4 <- sqrt(u) * abs(u - 1)
f5 <- sqrt(u) * abs(sqrt(u) - 1)

df <- tibble(u = u, f1 = f1, f2 = f2, f3 = f3, f4 = f4, f5 = f5) %>% pivot_longer(contains("f"))

ggplot(df, aes(x = u, y = value, color = name)) +
  geom_line(linewidth = 1.2)+
  labs(x = "u", y = "Function value") +
  scale_color_manual(
    values = c("#264653","#2a9d8f","#e9c46a","#f4a261","#e76f51"),
    labels = c(TeX("$u\\log(u)^2$"),
               TeX("$u(u-1)^2$"),
               TeX("$u|u-1|$"),
               TeX("$\\sqrt{u}|u-1|$"),
               TeX("$\\sqrt{u}|\\sqrt{u}-1|$")),
    name = TeX("pseudo divergence\ngenerating functions")
  )+
  theme_minimal()

###

u <- seq(0.001, 2, length.out = 1000)

f1 <- u * log(u)
f2 <- -log(u)
f3 <- (u - 1)^2
f4 <- (sqrt(u) - 1)^2
f5 <- u*log(u)-(u + 1)*log(u + 1)+log(4)

df <- tibble(u = u, f1 = f1, f2 = f2, f3 = f3, f4 = f4, f5 = f5) %>% pivot_longer(contains("f"))

ggplot(df, aes(x = u, y = value, color = name)) +
  geom_line(linewidth = 1.2)+
  labs(x = "u", y = "Function value") +
  scale_color_manual(
    values = c("#264653","#2a9d8f","#e9c46a","#f4a261","#e76f51"),
    labels = c(TeX("$u\\log(u)$"),
               TeX("$-\\log(u)$"),
               TeX("$(u-1)^2$"),
               TeX("$(\\sqrt{u}-1)^2$"),
               TeX("$ u\\log(u)-(u + 1)\\log(u + 1)+\\log(4)$")),
    name = TeX("divergence \ngenerating functions")
  )+
  theme_minimal()+
  ylim(-1,3.5)
  

###


u<- seq(-1, 1, length.out = 1000)
f_BHS_conj <- (2*(-1+sqrt(1+u)*exp(-1+sqrt(1+u))))*(u>=0)+
              (2*(-sqrt(u + 1)-1)*exp(-sqrt(u + 1) - 1)) *(u>=-1&u<0)

data_conj <- tibble(x=u,
                    y=f_BHS_conj,
                    conj = c(rep("concave", sum(u<0)),rep("convex",sum(u>=0)))
)
data_conj %>%
 ggplot(aes(x=x,y=y, color = conj))+
  geom_line(linewidth = 1.2)+
  scale_color_manual(
    values = c("#264653","#e76f51"),
    labels = c("concave","convex"),
    name = "curvature"
  )+
  theme_minimal()

u<- seq(0.01, 2, length.out = 1000)
df <- 2*log(u)+log(u)^2

data_df <- tibble(x=u,
                  y=df
)
data_df %>%
 ggplot(aes(x=x,y=y,color = "#264653"))+
  geom_line(linewidth = 1.2)+
  scale_color_manual(
    values = c("#264653"),
    labels = c(TeX("$2\\log(x)+\\log(x)^2$")),
    name = "function"
  )+
  theme_minimal()

# M and N simulation 
  




mixed_conj <- function(t,x,f,a,t_star){

  eval_f_inf <- function(t,x) (t*x-f(x))*(x< a)*(t< t_star)
  eval_f_sup <- function(t,x) (t*x-f(x))*(x>=a)*(t>= t_star)
  
  res_sup <<- sapply(t,eval_f_sup,x) %>%
   as_tibble() %>%
   summarise(across(contains("V"),c(max))) %>%
   pivot_longer(cols = contains("V")) %>%
   select(-c(name)) %>%
   mutate( t = t) 
  
  res_inf <<- sapply(t,eval_f_inf,x) %>%
    as_tibble() %>% 
    summarise(across(contains("V"),c(min))) %>%
    pivot_longer(cols = contains("V")) %>%
    select(-c(name)) %>%
    mutate( t = t)
  
  tibble(value = res_sup$value + res_inf$value,
         t=t)
  
}

f<- function(x){
  x*log(x)^2
}

res<- mixed_conj(t=seq(-1,2,length.out=100),
                 x=seq(1e-16,10,length.out=1e5),
                 f=f,
                 a=exp(-1),
                 t_star = 0
                 ) 
tibble(res$t,
       res_sup$value,
       res_inf$value) %>% print(n=100)

f_BHS_conj <- function(u){
  (2*(-1+sqrt(1+u)*exp(-1+sqrt(1+u))))*(u>=0)+
  (2*(-sqrt(u + 1)-1)*exp(-sqrt(u + 1) - 1)) *(u>=-1&u<0)
}

res %>% mutate(
  conj_approx = value,
  conj_analytical = f_BHS_conj(seq(-1,2,length.out=100))
  )%>%
  select(-value) %>%
  pivot_longer(cols = contains("conj")) %>%
  ggplot(aes(x=t,y=value, color = name))+geom_line(linewidth = 1.2)


res_fstar <- mixed_conj(t=seq(1e-5,3,length.out=100),
                 x=seq(-1,100,length.out=1e4),
                 f=f_BHS_conj,
                 a=0,
                 t_star = 0
                 ) 

res_fstar %>% ggplot(aes(x=t,y=value))+geom_line()


f_exp_conj <- function(x){
  x*log(x)-x
}

res_exp<- mixed_conj(t=seq(0,2,length.out=100),
                 x=seq(-100,100,length.out=1e5),
                 f=exp,
                 a=-100,
                 t_star = -1
                 ) 
res_exp %>% mutate(
  conj_approx = value,
  conj_analytical = f_exp_conj(seq(0,2,length.out=100))
  )%>%
  select(-value) %>%
  pivot_longer(cols = contains("conj")) %>%
  ggplot(aes(x=t,y=value, color = name))+geom_line(aes(linetype = name),linewidth = 1.2)
